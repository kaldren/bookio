@using Bookio.SPA.Services
@using Bookio.Core.Models

@inject BooksService BooksService
@inject NavigationManager NavigationManager

@{
    var individualBook = BooksService.GetBookById(BookId);

    // Individual Book
    if (individualBook != null)
    {
        <NavLink href="/books" class="btn btn-primary">
            All Books
        </NavLink>
        <hr />
        <div class="card" style="width: 18rem;">
            <img src="@individualBook.ThumbnailUrl" class="card-img-top" alt="@individualBook.Title">
            <div class="card-body">
                <h5 class="card-title">@individualBook.Title</h5>

                <AuthorComponent Book="@individualBook" />

                <BookRatingComponent Book="@individualBook" />

                <button class="btn btn-primary btn-view-book" @onclick="(e => ShowBookByIsbn(individualBook.Isbn))"
                        data-toggle="modal" data-target="#modal-@individualBook.Isbn">
                    Info
                </button>
                <button class="btn btn-success btn-read-book" @onclick="(e => ShowBookByIsbn(individualBook.Isbn))"
                        data-toggle="modal" data-target="#modal-@individualBook.Isbn">
                    Read
                </button>
            </div>
        </div>
    }
    else
    {
        // Show all books
        ShowAllBooks();

        <h3>List of Books</h3>

        <div class="list-of-books">
            @foreach (var book in booksList)
            {
                <div class="card" style="width: 18rem;">
                    <img src="@book.ThumbnailUrl" class="card-img-top" alt="@book.Title">
                    <div class="card-body">
                        <NavLink href="@NavigationManager.ToAbsoluteUri(@NavigationManager.Uri + '/' + book.BookId.ToString())">
                            <h5 class="card-title">@book.Title</h5>
                        </NavLink>
                        <p>
                            <AuthorComponent Book="@book" />
                        </p>

                        <BookRatingComponent Book="@book" />

                        <button class="btn btn-primary btn-view-book" @onclick="(e => ShowBookByIsbn(book.Isbn))"
                                data-toggle="modal" data-target="#modal-@book.Isbn">
                            Info
                        </button>
                        <button class="btn btn-success btn-read-book" @onclick="(e => ShowBookByIsbn(book.Isbn))"
                                data-toggle="modal" data-target="#modal-@book.Isbn">
                            Read
                        </button>
                    </div>
                </div>
                <!-- Modal -->
                <div class="modal fade" id="modal-@book.Isbn" tabindex="-1" role="dialog" aria-labelledby="@book.Isbn" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <img src="@book.ThumbnailUrl" alt="@book.Title" />
                                <h5 class="modal-title" id="exampleModalLabel">@book.Title</h5>
                                <p>
                                    (
                                    @for (int i = 0; i < book.BookCategories.Count; i++)
                                    {
                                        if (i + 1 < book.BookCategories.Count)
                                        {
                                            <span>@book.BookCategories.ElementAt(i).Category.Name,</span>
                                        }
                                        else
                                        {
                                            <span>@book.BookCategories.ElementAt(i).Category.Name</span>
                                        }
                                    }
                                    )
                                </p>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                @book.LongDescription
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
}


@code {
    [Parameter]
    public int BookId { get; set; }

    public string SelectedBook { get; set; } = string.Empty;

    private void ShowBookByIsbn(string isbn)
    {
        SelectedBook = BooksService.GetAllBooks().FirstOrDefault(x => x.Isbn == isbn).Title;
    }

    List<Book> booksList;

    protected void ShowAllBooks()
    {
        booksList = BooksService.GetAllBooks().ToList();
    }
}
