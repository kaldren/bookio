@page "/books"
@page "/books/{bookId}"

@using Bookio.SPA.Services
@using Bookio.Core.Models
@inject BooksService BooksService
@*// Individual books*@
<div class="form-group">
    <input class="form-control" type="text" name="book-search" placeholder="Search a book..." @oninput="(e => SearchBookByTitle(e.Value.ToString()) )" />
</div>
@if (BookId == null)
{
    <BookComponent />
} else
{
    int id = 0;

    bool isBookIdAnInt = Int32.TryParse(BookId, out id);

    if (isBookIdAnInt)
    {
        <BookComponent BookId="@id" />
    }
}


@code {
    public string SelectedBook { get; set; } = string.Empty;
    public string TxtSearchBookField { get; set; } = string.Empty;

    [Parameter]
    public string BookId { get; set; }

    List<Book> booksList;

    protected override void OnInitialized()
    {
        booksList = BooksService.GetAllBooks().ToList();
    }

    private void ShowBookByIsbn(string isbn)
    {
        SelectedBook = booksList.FirstOrDefault(x => x.Isbn == isbn).Title;
    }

    private void SearchBookByTitle(string title)
    {
        TxtSearchBookField = title.ToLower();

        booksList = BooksService.GetAllBooks()
                                .Where(x => x.Title.ToLower()
                                .Contains(TxtSearchBookField))
                                .ToList();
    }

    private Book GetBookById(string bookId)
    {
        int id = 0;

        bool isBookIdAnInt = Int32.TryParse(bookId, out id);

        if (isBookIdAnInt)
        {
            return booksList.FirstOrDefault(x => x.BookId == id);
        }

        return null;
    }
}
